function e(e){return Number.isSafeInteger(e)}function t(t){if("string"==typeof t&&(t=parseInt(t)),!e(t))throw new TypeError(`expected chain: ${t}`);return t}class i{constructor({cooldown:e=3e4}={}){this.queue=[],this.cooldown=e}add_static(e,i){return e=t(e),this.queue.some((e=>e.provider===i))||this.queue.push({chain_id:e,provider:i}),this}add_dynamic(e){if(!this.queue.some((t=>t.provider===e))){let t={provider:e,chain_id:null};e.on("connect",(({chainId:e})=>{t.chain_id=parseInt(e)})),e.on("chainChanged",(e=>{t.chain_id=parseInt(e)})),this.queue.unshift(t)}return this}known_chain_ids(){return[...new Set(this.queue.filter((e=>"number"==typeof e.chain_id)))]}disconnect(){for(let{provider:e}of this.queue)e.disconnect?.()}async find_provider(t,i=!1,r=!0){if(!e(t))throw new TypeError(`expected chain_id integer: ${t}`);r&&await Promise.all(this.queue.filter((e=>null===e.chain_id)).map((async e=>{try{e.chain_id=await async function(e){return parseInt(await e.request({method:"eth_chainId"}))}(e.provider)}catch(t){e.chain_id=!1,e.cooldown=setTimeout((()=>{e.chainId=null}),this.cooldown)}})));let s=this.queue.find((e=>e.chain_id===t));if(!s&&i)throw new Error(`No provider for chain ${t}`);return s?.provider}view(e){e=t(e);let i=async(...t)=>this.find_provider(e,...t);return new Proxy(this,{get:(e,t)=>{switch(t){case"isProviderView":return!0;case"get_provider":return i;default:return e[t]}}})}}async function r({fix:e=!0,timeout:t=5e3}={}){return new Promise(((i,r)=>{let n,o;const h="ethereum#initialized";function c(){let t=globalThis.ethereum;if(t)return i(e?function(e,{retry:t=2,delay:i=1e3}={}){if("number"!=typeof t||t<1)throw new TypeError("expected retry > 0");if("number"!=typeof i||i<0)throw new TypeError("expected delay >= 0");if(!e)return;if(e.isRetryProvider)return e;async function r(r){for(;;)try{return await e.request(r)}catch(e){if(!(s(e)&&t-- >0))throw e;await new Promise((e=>setTimeout(e,i)))}}return new Proxy(e,{get:function(e,t){switch(t){case"request":return r;case"isRetryProvider":return!0;default:return e[t]}}})}(t):t),!0}c()||(n=setTimeout((()=>{globalThis?.removeEventListener(h,o),c()||r(new Error("No window.ethereum"))}),0|t),o=()=>{clearTimeout(n),globalThis?.removeEventListener(h,o),c()||r(new Error("jebaited"))},globalThis?.addEventListener(h,o))}))}function s(e){return-32e3===e.code&&"header not found"===e.message}class n{constructor(){this.__events={}}emit(e,...t){let i=this.__events[e];if(!i)return!1;for(let e of i)e(...t);return!0}on(e,t){let i=this.__events[e];return i||(this.__events[e]=i=[]),i.push(t),this}removeListener(e,t){let i=this.__events[e];if(i){let r=i.indexOf(t);r>=0&&(i.splice(r,1),0==i.length&&delete this.__events[e])}return this}}class o extends n{constructor({url:e,fetch:t,source:i,request_timeout:r=3e4,idle_timeout:s=6e4}){if("string"!=typeof e)throw new TypeError("expected url");if(!t){let e=globalThis.fetch;if(!e)throw new TypeError("unable to find fetch()");t=e.bind(globalThis)}super(),this.url=e,this._fetch_api=t,this._id=0,this._chain_id=void 0,this._request_timeout=0|r,this._idle_timeout=0|s,this._idle_timer=void 0,this._source=i}source(){return this._source??this.url}get isRetryProvider(){return!0}async request(e){if("object"!=typeof e)throw new TypeError("expected object");if(!this._idle_timer){try{this._chain_id=await this._retry({method:"eth_chainId"})}catch(e){throw this.emit("connect-error",e),e}this.emit("connect",{chainId:this._chain_id}),this._restart_idle()}switch(e.method){case"eth_chainId":return this._chain_id;case"eth_subscribe":case"eth_unsubscribe":throw new Error(`${e.method} not supported by FetchProvider`)}try{let t=await this._retry(e);return this._restart_idle(),t}catch(e){throw this._terminate(e),e}}_restart_idle(){clearTimeout(this._idle_timer),this._idle_timer=!(this._idle_timeout>0)||setTimeout((()=>{this._terminate(new Error("Idle timeout"))}),this._idle_timeout)}disconnect(){this._idle_timer&&this._terminate(new Error("Forced disconnect"))}_terminate(e){this.emit("disconnect",e),clearTimeout(this._idle_timer),this._idle_timer=void 0,this._chain_id=void 0}_fetch(e,...t){return this._fetch_api(this.url,{method:"POST",body:JSON.stringify({...e,jsonrpc:"2.0",id:++this._id}),cache:"no-store",...t})}async _retry(e,t=3,i=500){for(;;)try{return await this._request(e)}catch(e){if(!(s(e)&&t-- >0))throw e;await new Promise((e=>setTimeout(e,i)))}}async _request(e){let t,i;if(this._request_timeout>0){let i=new AbortController,r=setTimeout((()=>i.abort()),this._request_timeout);try{t=await this._fetch(e,{signal:i.signal})}finally{clearTimeout(r)}}else t=await this._fetch(e);if(200!==t.status)throw new Error(`Fetch failed: ${t.status}`);try{i=await t.json()}catch(e){throw new Error("Invalid provider response: expected json",{cause:e})}let{error:r}=i;if(!r)return i.result;let s=new Error(r.message??"unknown error");throw s.code=r.code,s}}class h extends n{constructor({url:e,WebSocket:t,request_timeout:i=3e4,idle_timeout:r=6e4}){if("string"!=typeof e)throw new TypeError("expected url");if(t||(t=globalThis.WebSocket),!t)throw new Error("unknown WebSocket implementation");super(),this.url=e,this._ws_api=t,this._request_timeout=i,this._idle_timeout=r,this._idle_timer=void 0,this._ws=void 0,this._terminate=void 0,this._reqs=void 0,this._subs=new Set,this._id=void 0,this._chain_id=void 0}source(){return this.url}get idle_timeout(){return this._idle_timeout}set idle_timeout(e){this.idle_timeout=0|e,this._restart_idle()}disconnect(){this._terminate?.(new Error("Forced disconnect"))}_restart_idle(){if(clearTimeout(this._idle_timer),this._idle_timeout>0&&0==this._subs.size&&0==Object.keys(this._reqs).length){const{_terminate:e}=this;this._idle_timer=setTimeout((()=>{e(new Error("Idle timeout"))}),this._idle_timeout)}}async request(e){if("object"!=typeof e)throw new TypeError("expected object");let{method:t,params:i}=e;if("string"!=typeof t)throw new Error("expected method");if(i&&!Array.isArray(i))throw new Error("expected params array");switch(await this.ensure_connected(),t){case"eth_chainId":return this._chain_id;case"eth_subscribe":return this._request(e).then((e=>(this._subs.add(e),clearTimeout(this._idle_timer),e)));case"eth_unsubscribe":return this._request(e).then((e=>(this._subs.delete(i[0]),this._restart_idle(),e)));default:return this._request(e)}}_request(e){const t=++this._id,{_reqs:i,_ws:r,_request_timeout:s}=this;return clearTimeout(this._idle_timer),new Promise(((n,o)=>{let h=s>0?setTimeout((()=>{delete i[t],this._restart_idle(),o(new Error("Timeout"))}),s):void 0;i[t]={timer:h,ful:n,rej:o},r.send(JSON.stringify({jsonrpc:"2.0",id:t,...e}))}))}async ensure_connected(){let{_ws:e}=this;if(Array.isArray(e))return new Promise(((t,i)=>{e.push({ful:t,rej:i})}));if(e)return;const t=this._ws=[],i=new this._ws_api(this.url);try{await new Promise(((e,t)=>{this._terminate=t;let r=setTimeout((()=>t(new Error("Timeout"))),this._request_timeout);i.addEventListener("close",t),i.addEventListener("error",t),i.addEventListener("open",(()=>{i.removeEventListener("error",t),i.removeEventListener("close",t),clearTimeout(r),e()}))}))}catch(e){i.close(),this._ws=void 0,this._terminate=void 0;for(let{rej:i}of t)i(e);throw this.emit("connect-error",e),e}this._ws=i,this._id=0;let r,s=this._reqs={},n=this._terminate=e=>{i.removeEventListener("close",r),i.removeEventListener("error",n),i.close(),this._ws=void 0,this._terminate=void 0,this._reqs=void 0,this._id=void 0,this._chain_id=void 0,this._subs.clear(),clearTimeout(this._idle_timer);for(let{rej:t}of Object.values(s))t(e);this.emit("disconnect",e)};r=()=>n(new Error("Unexpected close")),i.addEventListener("close",r),i.addEventListener("error",n),i.addEventListener("message",(({data:e})=>{let t=JSON.parse(e),{id:i}=t;if(void 0===i){let{method:e,params:{subscription:i,result:r}}=t;this.emit("message",{type:e,data:{subscription:i,result:r}})}else{let e=s[i];if(!e)return;delete s[t.id],clearTimeout(e.timer),this._restart_idle();let{result:r,error:n}=t;if(r)return e.ful(r);let o=new Error(n?.message??"Unknown Error");"code"in n&&(o.code=n.code),e.rej(o)}})),this._chain_id=await this._request({method:"eth_chainId"}),this.emit("connect",{chainId:this._chain_id});for(let{ful:e}of t)e()}}export{o as FetchProvider,i as Providers,h as WebSocketProvider,r as determine_window_provider};
