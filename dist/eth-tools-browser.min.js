function e(e){let t;if("string"==typeof e?t=parseInt(e):"number"==typeof e&&(t=e),!Number.isSafeInteger(t))throw new TypeError(`Invalid chain: ${e}`);return`0x${t.toString(16)}`}class t{constructor(e){this._id=e,this.data=void 0}get id(){return this._id}get name(){return this.data?.name??`Chain(${this.id})`}explorer_address_uri(e){return this.data?.explore_address.replace("{}",e)}explorer_tx_uri(e){return this.data?.explore_tx.replace("{}",e)}toJSON(){return this.id}toString(){return`Chain(${this.id})`}}const i={};function r(r,s=!1){if(r instanceof t)return r;let n=e(r),o=i[n];if(!o&&s)throw new Error(`Unknown chain: ${n}`);return o}function s(){return Object.values(i)}function n(r){if(r instanceof t)return r;let s=e(r),n=i[s];return n||(n=i[s]=new t(s)),n}function o(e){return{explore_base:e,explore_address:`${e}/address/{}`,explore_tx:`${e}/tx/{}`}}function h(e){return-32e3===e.code&&"header not found"===e.message}n(1).data={name:"Mainnet",...o("https://etherscan.io")},n(3).data={name:"Ropsten",...o("https://ropsten.etherscan.io"),testnet:!0},n(4).data={name:"Rinkeby",...o("https://rinkeby.etherscan.io"),testnet:!0},n(5).data={name:"Goerli",...o("https://goerli.etherscan.io"),testnet:!0},n(43).data={name:"Kovan",...o("https://kovan.etherscan.io"),testnet:!0},n(137).data={name:"Matic",...o("https://polygonscan.com")},n(43114).data={name:"Avax C-chain",...o("https://snowtrace.io")};async function a(e,t){let i=3;for(;;)try{return await e(t)}catch(e){if(!(h(e)&&i-- >0))throw e;await new Promise((e=>setTimeout(e,500)))}}async function c({smart:e=!0,timeout:t=3e3}={}){return new Promise(((i,r)=>{let s,n;const o="ethereum#initialized";function h(){let t=globalThis.ethereum;if(t)return i(e?d(t):t),!0}h()||(s=setTimeout((()=>{globalThis?.removeEventListener(o,n),h()||r(new Error("No window.ethereum"))}),0|t),n=()=>{clearTimeout(s),globalThis?.removeEventListener(o,n),h()||r(new Error("jebaited"))},globalThis?.addEventListener(o,n))}))}function d(e){if(e.isSmartProvider)return e;if("function"!=typeof e.request)throw new TypeError("expected provider");const t=e.isMetaMask?"MetaMask":"Unknown Provider";let i;async function r(t){return"eth_chainId"===t.method&&i?i:a(e.request.bind(e),t)}async function s(e,...t){return r({method:e,params:t})}return e.on("connect",(({chainId:e})=>{i=e})),e.on("chainChanged",(e=>{i=e})),e.on("disconnect",(()=>{i=void 0})),new Proxy(e,{get:function(e,n){switch(n){case"req":return s;case"request":return r;case"chain_id":return i;case"source":return t;case"isSmartProvider":return!0;case"disconnect":return e[n]??(()=>{});default:return e[n]}}})}class u{constructor(){this.queue=[]}add_static(e,t){let i=n(e);return t=d(t),this.queue.some((e=>e.provider===t))||this.queue.push({chain:i,provider:t}),this}add_dynamic(e){return e=d(e),this.queue.some((t=>t.provider===e))||this.queue.unshift({provider:e}),this}available_providers(){return this.queue.map((({chain:e,provider:t})=>{if(null==e&&(e=r(t.chain_id)),e)return[e,t]})).filter((e=>e))}disconnect(){for(let{provider:e}of this.queue)e.disconnect?.()}async find_provider(e,t){let i=r(e,t);if(i)for(let{provider:e,chain:t}of this.queue)if(void 0===t&&(t=r(await e.request({method:"eth_chainId"}))),i===t)return e;if(t)throw new Error(`No provider for chain ${i}`)}view(e){let t=n(e),i=async e=>this.find_provider(t,e);return new Proxy(this,{get:(e,r)=>{switch(r){case"isProviderView":return!0;case"chain":return t;case"get_provider":return i;default:return e[r]}}})}}class _ extends class{constructor(){this.__events={}}emit(e,...t){let i=this.__events[e];if(!i)return!1;for(let e of i)e(...t);return!0}on(e,t){let i=this.__events[e];return i||(this.__events[e]=i=[]),i.push(t),this}removeListener(e,t){let i=this.__events[e];if(i){let r=i.indexOf(t);r>=0&&(i.splice(r,1),0==i.length&&delete this.__events[e])}return this}}{get isSmartProvider(){return!0}async req(e,...t){return this.request({method:e,params:[...t]})}}class l extends _{constructor({url:e,fetch:t,source:i,request_timeout:r=3e4,idle_timeout:s=6e4}){if("string"!=typeof e)throw new TypeError("expected url");if(!t){let e=globalThis.fetch;if(!e)throw new TypeError("unable to find fetch()");t=e.bind(globalThis)}super(),this.url=e,this._fetch_api=t,this._id=0,this._chain_id=void 0,this._request_timeout=0|r,this._idle_timeout=0|s,this._idle_timer=void 0,this._source=i}get source(){return this._source??this.url}async request(e){if("object"!=typeof e)throw new TypeError("expected object");let t=this._request_once.bind(this);if(!this._idle_timer){try{this._chain_id=await a(t,{method:"eth_chainId"})}catch(e){throw this.emit("connect-error",e),e}this.emit("connect",{chainId:this._chain_id}),this._restart_idle()}switch(e.method){case"eth_chainId":return this._chain_id;case"eth_subscribe":case"eth_unsubscribe":throw new Error(`${e.method} not supported by FetchProvider`)}try{let i=await a(t,e);return this._restart_idle(),i}catch(e){throw this._terminate(e),e}}_restart_idle(){clearTimeout(this._idle_timer),this._idle_timer=!(this._idle_timeout>0)||setTimeout((()=>{this._terminate(new Error("Idle timeout"))}),this._idle_timeout)}disconnect(){this._idle_timer&&this._terminate(new Error("Forced disconnect"))}_terminate(e){this.emit("disconnect",e),clearTimeout(this._idle_timer),this._idle_timer=void 0,this._chain_id=void 0}_fetch(e,...t){return this._fetch_api(this.url,{method:"POST",body:JSON.stringify({...e,jsonrpc:"2.0",id:++this._id}),cache:"no-store",...t})}async _request_once(e){let t,i;if(this._request_timeout>0){let i=new AbortController,r=setTimeout((()=>i.abort()),this._request_timeout);try{t=await this._fetch(e,{signal:i.signal})}finally{clearTimeout(r)}}else t=await this._fetch(e);if(200!==t.status)throw new Error(`Fetch failed: ${t.status}`);try{i=await t.json()}catch(e){throw new Error("Invalid provider response: expected json",{cause:e})}let{error:r}=i;if(!r)return i.result;let s=new Error(r.message??"unknown error");throw s.code=r.code,s}}class m extends _{constructor({url:e,WebSocket:t,source:i,request_timeout:r=3e4,idle_timeout:s=6e4}){if("string"!=typeof e)throw new TypeError("expected url");if(t||(t=globalThis.WebSocket),!t)throw new Error("unknown WebSocket implementation");super(),this.url=e,this._ws_api=t,this._request_timeout=r,this._idle_timeout=s,this._stay_connected=!1,this._reconnect_timer=void 0,this._idle_timer=void 0,this._ws=void 0,this._terminate=void 0,this._reqs=void 0,this._subs=new Set,this._id=void 0,this._chain_id=void 0,this._source=i}get source(){return this._source??this.url}get idle_timeout(){return this._idle_timeout}set idle_timeout(e){this.idle_timeout=0|e,this._restart_idle()}connect(){this._stay_connected||(this._stay_connected=!0,this._schedule_connect())}disconnect(){this._stay_connected=!1,this._terminate?.(new Error("Forced disconnect"))}_schedule_connect(){if(!this._stay_connected||this._ws)return;let e=this._last_connect,t=0;void 0!==e&&(t=Math.max(0,5e3-(Date.now()-e))),this._reconnect_timer=setTimeout((()=>this.ensure_connected().catch((()=>{}))),t)}_restart_idle(){if(clearTimeout(this._idle_timer),this._idle_timeout>0&&0==this._subs.size&&0==Object.keys(this._reqs).length){const{_terminate:e}=this;this._idle_timer=setTimeout((()=>{e(new Error("Idle timeout"))}),this._idle_timeout)}}async request(e){if("object"!=typeof e)throw new TypeError("expected object");let{method:t,params:i}=e;if("string"!=typeof t)throw new Error("expected method");if(i&&!Array.isArray(i))throw new Error("expected params array");switch(await this.ensure_connected(),t){case"eth_chainId":return this._chain_id;case"eth_subscribe":return this._request(e).then((e=>(this._subs.add(e),clearTimeout(this._idle_timer),e)));case"eth_unsubscribe":return this._request(e).then((e=>(this._subs.delete(i[0]),this._restart_idle(),e)));default:return this._request(e)}}_request(e){const t=++this._id,{_reqs:i,_ws:r,_request_timeout:s}=this;return clearTimeout(this._idle_timer),new Promise(((n,o)=>{let h=s>0?setTimeout((()=>{delete i[t],this._restart_idle(),o(new Error("Timeout"))}),s):void 0;i[t]={timer:h,ful:n,rej:o},r.send(JSON.stringify({jsonrpc:"2.0",id:t,...e}))}))}async ensure_connected(){let{_ws:e}=this;if(Array.isArray(e))return new Promise(((t,i)=>{e.push({ful:t,rej:i})}));if(e)return;clearTimeout(this._reconnect_timer),this._last_connect=Date.now();const t=this._ws=[],i=new this._ws_api(this.url);try{await new Promise(((e,t)=>{this._terminate=t;let r=setTimeout((()=>t(new Error("Timeout"))),this._request_timeout);i.addEventListener("close",t),i.addEventListener("error",t),i.addEventListener("open",(()=>{i.removeEventListener("error",t),i.removeEventListener("close",t),clearTimeout(r),e()}))}))}catch(e){i.close(),this._ws=void 0,this._terminate=void 0;for(let{rej:i}of t)i(e);throw this.emit("connect-error",e),this._schedule_connect(),e}this._ws=i,this._id=0;let r,s=this._reqs={},n=this._terminate=e=>{i.removeEventListener("close",r),i.removeEventListener("error",n),i.close(),this._ws=void 0,this._terminate=void 0,this._reqs=void 0,this._id=void 0,this._chain_id=void 0,this._subs.clear(),clearTimeout(this._idle_timer);for(let{rej:t}of Object.values(s))t(e);this.emit("disconnect",e),this._schedule_connect()};r=()=>n(new Error("Unexpected close")),i.addEventListener("close",r),i.addEventListener("error",n),i.addEventListener("message",(({data:e})=>{let t=JSON.parse(e),{id:i}=t;if(void 0===i){let{method:e,params:{subscription:i,result:r}}=t;this.emit("message",{type:e,data:{subscription:i,result:r}})}else{let e=s[i];if(!e)return;delete s[t.id],clearTimeout(e.timer),this._restart_idle();let{result:r,error:n}=t;if(void 0!==r)return e.ful(r);let o=new Error(n.message);o.code=n.code,e.rej(o)}})),this._chain_id=await this._request({method:"eth_chainId"}),this.emit("connect",{chainId:this._chain_id});for(let{ful:e}of t)e()}}export{l as FetchProvider,u as Providers,m as WebSocketProvider,s as defined_chains,c as determine_window_provider,n as ensure_chain,r as find_chain};
