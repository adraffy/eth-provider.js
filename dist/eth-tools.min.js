function r(A=256){return new l(A,1)}function A(A=256){return new l(A,6)}function e(A){return new i(A,31)}function f(A){return[...A].map(A=>A.toString(16).padStart(2,"0")).join("")}function o(r){if(typeof r!=="string")throw TypeError("expected string");if(r.startsWith("0x")){if(r.length==2)throw new TypeError("expected digits");r=r.slice(2)}if(r.length&1){r=`0${r}`}let A=r.length>>1;let n=new Uint8Array(A);for(let e=0,t=0;e<A;e++){let A=parseInt(r.slice(t,t+=2),16);if(Number.isNaN(A))throw new TypeError("expected hex byte");n[e]=A}return n}function s(e){if(typeof e!=="string")throw TypeError("expected string");try{e=unescape(encodeURIComponent(e))}catch(A){throw new Error("malformed utf8",{cause:A})}let{length:t}=e;let r=new Uint8Array(t);for(let A=0;A<t;A++){r[A]=e.charCodeAt(A)}return r}function t(A){try{return decodeURIComponent(escape(String.fromCharCode(...A)))}catch(A){throw new Error("malformed utf8",{cause:A})}}class n{constructor(A,e){const t=1600;if(A&31)throw new Error("capacity % 32 != 0");if(A<0||A>=t)throw new Error(`capacity must be [0,${t})`);this.sponge=Array(50).fill(0);this.block_count=t-A>>5;this.block_index=0;this.suffix=e;this.ragged_block=0;this.ragged_shift=0}update(A){if(!(A instanceof Uint8Array)){if(A instanceof ArrayBuffer){A=new Uint8Array(A)}else if(Array.isArray(A)){A=Uint8Array.from(A)}else if(typeof A==="string"){A=s(A)}else{throw new TypeError("expected bytes")}}let e=0;let t=A.length;if(this.ragged_shift>0){e=this._add_ragged(A,0);if(e==t)return this}let{sponge:r,block_index:n,block_count:i}=this;for(;e+4<=t;e+=4){r[n++]^=A[e]|A[e+1]<<8|A[e+2]<<16|A[e+3]<<24;if(n==i){B(r);n=0}}this.block_index=n;if(e<t)this._add_ragged(A,e);return this}_add_ragged(A,e){let{ragged_shift:t,ragged_block:r}=this;let n=0;for(;e<A.length&&t<32;n++,e++,t+=8){r|=A[e]<<t}if(t==32){this._add_block(r);t=0;r=0}this.ragged_block=r;this.ragged_shift=t;return n}_add_block(A){let{sponge:e,block_index:t,block_count:r}=this;e[t++]^=A;if(t==r){B(e);t=0}this.block_index=t}finalize(){let{sponge:A,suffix:e,ragged_shift:t,block_index:r,block_count:n}=this;if(t){if(t==-1)return;e=this.ragged_block|e<<t}A[r]^=e;A[n-1]^=2147483648;B(A);this.ragged_shift=-1}}class i extends n{constructor(A,e){super(A<<1,e);this.size0=A>>2;this.byte_offset=0}hex(A){return f(this.bytes(A))}bytes(A){this.finalize();if(!A)A=this.size0;let{sponge:e,byte_offset:t,block_count:r}=this;let n=t&3;let i=(n>0)+(A+3>>2);let o=new Int32Array(i);let s=(t>>2)%r;for(let A=0;A<i;A++){o[A]=e[s++];if(s==r){B(e);s=0}}this.byte_offset=t+A;return new Uint8Array(o.buffer,n,A)}}class l extends n{constructor(A,e){super(A<<1,e);this.size=A>>5}get hex(){return f(this.bytes)}get bytes(){this.finalize();let{size:e,sponge:t}=this;let r=new Int32Array(e);for(let A=0;A<e;A++){r[A]=t[A]}return new Uint8Array(r.buffer)}}const CA=[1,0,32898,0,32906,-2147483648,-2147450880,-2147483648,32907,0,-2147483647,0,-2147450751,-2147483648,32777,-2147483648,138,0,136,0,-2147450871,0,-2147483638,0,-2147450741,0,139,-2147483648,32905,-2147483648,32771,-2147483648,32770,-2147483648,128,-2147483648,32778,0,-2147483638,-2147483648,-2147450751,-2147483648,32896,-2147483648,-2147483647,0,-2147450872,-2147483648];function B(BA){for(let lA=0;lA<48;lA+=2){let A=BA[0]^BA[10]^BA[20]^BA[30]^BA[40];let e=BA[1]^BA[11]^BA[21]^BA[31]^BA[41];let t=BA[2]^BA[12]^BA[22]^BA[32]^BA[42];let r=BA[3]^BA[13]^BA[23]^BA[33]^BA[43];let n=BA[4]^BA[14]^BA[24]^BA[34]^BA[44];let i=BA[5]^BA[15]^BA[25]^BA[35]^BA[45];let o=BA[6]^BA[16]^BA[26]^BA[36]^BA[46];let s=BA[7]^BA[17]^BA[27]^BA[37]^BA[47];let l=BA[8]^BA[18]^BA[28]^BA[38]^BA[48];let B=BA[9]^BA[19]^BA[29]^BA[39]^BA[49];let C=l^(t<<1|r>>>31);let c=B^(r<<1|t>>>31);BA[0]^=C;BA[1]^=c;BA[10]^=C;BA[11]^=c;BA[20]^=C;BA[21]^=c;BA[30]^=C;BA[31]^=c;BA[40]^=C;BA[41]^=c;C=A^(n<<1|i>>>31);c=e^(i<<1|n>>>31);BA[2]^=C;BA[3]^=c;BA[12]^=C;BA[13]^=c;BA[22]^=C;BA[23]^=c;BA[32]^=C;BA[33]^=c;BA[42]^=C;BA[43]^=c;C=t^(o<<1|s>>>31);c=r^(s<<1|o>>>31);BA[4]^=C;BA[5]^=c;BA[14]^=C;BA[15]^=c;BA[24]^=C;BA[25]^=c;BA[34]^=C;BA[35]^=c;BA[44]^=C;BA[45]^=c;C=n^(l<<1|B>>>31);c=i^(B<<1|l>>>31);BA[6]^=C;BA[7]^=c;BA[16]^=C;BA[17]^=c;BA[26]^=C;BA[27]^=c;BA[36]^=C;BA[37]^=c;BA[46]^=C;BA[47]^=c;C=o^(A<<1|e>>>31);c=s^(e<<1|A>>>31);BA[8]^=C;BA[9]^=c;BA[18]^=C;BA[19]^=c;BA[28]^=C;BA[29]^=c;BA[38]^=C;BA[39]^=c;BA[48]^=C;BA[49]^=c;let f=BA[0];let g=BA[1];let a=BA[11]<<4|BA[10]>>>28;let E=BA[10]<<4|BA[11]>>>28;let h=BA[20]<<3|BA[21]>>>29;let w=BA[21]<<3|BA[20]>>>29;let u=BA[31]<<9|BA[30]>>>23;let T=BA[30]<<9|BA[31]>>>23;let d=BA[40]<<18|BA[41]>>>14;let Q=BA[41]<<18|BA[40]>>>14;let D=BA[2]<<1|BA[3]>>>31;let I=BA[3]<<1|BA[2]>>>31;let N=BA[13]<<12|BA[12]>>>20;let S=BA[12]<<12|BA[13]>>>20;let y=BA[22]<<10|BA[23]>>>22;let M=BA[23]<<10|BA[22]>>>22;let O=BA[33]<<13|BA[32]>>>19;let R=BA[32]<<13|BA[33]>>>19;let L=BA[42]<<2|BA[43]>>>30;let p=BA[43]<<2|BA[42]>>>30;let P=BA[5]<<30|BA[4]>>>2;let m=BA[4]<<30|BA[5]>>>2;let U=BA[14]<<6|BA[15]>>>26;let F=BA[15]<<6|BA[14]>>>26;let G=BA[25]<<11|BA[24]>>>21;let b=BA[24]<<11|BA[25]>>>21;let Y=BA[34]<<15|BA[35]>>>17;let K=BA[35]<<15|BA[34]>>>17;let H=BA[45]<<29|BA[44]>>>3;let x=BA[44]<<29|BA[45]>>>3;let k=BA[6]<<28|BA[7]>>>4;let X=BA[7]<<28|BA[6]>>>4;let V=BA[17]<<23|BA[16]>>>9;let Z=BA[16]<<23|BA[17]>>>9;let z=BA[26]<<25|BA[27]>>>7;let J=BA[27]<<25|BA[26]>>>7;let v=BA[36]<<21|BA[37]>>>11;let j=BA[37]<<21|BA[36]>>>11;let W=BA[47]<<24|BA[46]>>>8;let q=BA[46]<<24|BA[47]>>>8;let _=BA[8]<<27|BA[9]>>>5;let $=BA[9]<<27|BA[8]>>>5;let AA=BA[18]<<20|BA[19]>>>12;let eA=BA[19]<<20|BA[18]>>>12;let tA=BA[29]<<7|BA[28]>>>25;let rA=BA[28]<<7|BA[29]>>>25;let nA=BA[38]<<8|BA[39]>>>24;let iA=BA[39]<<8|BA[38]>>>24;let oA=BA[48]<<14|BA[49]>>>18;let sA=BA[49]<<14|BA[48]>>>18;BA[0]=f^~N&G;BA[1]=g^~S&b;BA[10]=k^~AA&h;BA[11]=X^~eA&w;BA[20]=D^~U&z;BA[21]=I^~F&J;BA[30]=_^~a&y;BA[31]=$^~E&M;BA[40]=P^~V&tA;BA[41]=m^~Z&rA;BA[2]=N^~G&v;BA[3]=S^~b&j;BA[12]=AA^~h&O;BA[13]=eA^~w&R;BA[22]=U^~z&nA;BA[23]=F^~J&iA;BA[32]=a^~y&Y;BA[33]=E^~M&K;BA[42]=V^~tA&u;BA[43]=Z^~rA&T;BA[4]=G^~v&oA;BA[5]=b^~j&sA;BA[14]=h^~O&H;BA[15]=w^~R&x;BA[24]=z^~nA&d;BA[25]=J^~iA&Q;BA[34]=y^~Y&W;BA[35]=M^~K&q;BA[44]=tA^~u&L;BA[45]=rA^~T&p;BA[6]=v^~oA&f;BA[7]=j^~sA&g;BA[16]=O^~H&k;BA[17]=R^~x&X;BA[26]=nA^~d&D;BA[27]=iA^~Q&I;BA[36]=Y^~W&_;BA[37]=K^~q&$;BA[46]=u^~L&P;BA[47]=T^~p&m;BA[8]=oA^~f&N;BA[9]=sA^~g&S;BA[18]=H^~k&AA;BA[19]=x^~X&eA;BA[28]=d^~D&U;BA[29]=Q^~I&F;BA[38]=W^~_&a;BA[39]=q^~$&E;BA[48]=L^~P&V;BA[49]=p^~m&Z;BA[0]^=CA[lA];BA[1]^=CA[lA+1]}}function C(e,t){let{length:r}=e;let n=r-t.length;for(let A=0;n==0&&A<r;A++)n=e[A]-t[A];return n}function c(A){if(typeof A!=="string")throw new TypeError("expected string");if(A.startsWith("0x"))A=A.slice(2);A=A.toLowerCase();if(!/^[a-f0-9]{40}$/.test(A))throw new TypeError("expected 40-char hex");let t=r().update(A).hex;return"0x"+[...A].map((A,e)=>t.charCodeAt(e)>=56?A.toUpperCase():A).join("")}function g(A){return/^(0x)?[a-f0-9]{40}$/i.test(A)}function a(A){return/^(0x)?[0]+$/i.test(A)}const E="0x0000000000000000000000000000000000000000";function h(e){try{let A=bytes_from_base58(e);return A.length>=2&&A.length==2+A[1]}catch(A){return false}}class w{static zero(){return new this(new Uint8Array(32))}static from_number(A){return this.zero().set_number(A)}static from_bytes(A){return new this(d(A,32))}static from_hex(A){return this.from_bytes(o(A))}static from_dec(t){if(!/^[0-9]+$/.test(t))throw new TypeError("expected decimal digits");let e=t.length;if(e<10)this.from_number(parseInt(t,10));let r=new Uint8Array(Math.max(32,e));let n=0;for(let A=0;A<e;A++){let e=t.charCodeAt(A)-48;for(let A=0;A<n;A++){e+=r[A]*10;r[A]=e;e>>=8}while(e>0){r[n++]=e;e>>=8}}for(let t=Math.min(n,15);t>=0;t--){let A=31-t;let e=r[t];r[t]=r[A];r[A]=e}return new this(r.slice(0,32))}static from_str(A){return A.startsWith("0x")?this.from_hex(A):this.from_dec(A)}constructor(A){if(!(A instanceof Uint8Array))throw new TypeError("expected bytes");if(A.length!=32)throw new TypeError("expected 32 bytes");this.bytes=A}compare(A){if(!(A instanceof w))throw new TypeError("expected Uint256");return C(this.bytes,A.bytes)}set_number(A){T(this.bytes,A);return this}get number(){return u(this.bytes)}get hex(){return"0x"+f(this.bytes)}get dec(){let r=[0];for(let t of this.bytes){for(let e=0;e<r.length;++e){let A=r[e]<<8|t;r[e]=A%10;t=A/10|0}while(t>0){r.push(t%10);t=t/10|0}}return String.fromCharCode(...r.reverse().map(A=>48+A))}toJSON(){return this.hex}toString(){return`Uint256(${this.hex})`}}function u(t){if(t.length>7){let e=t.length-7;for(let A=0;A<e;A++)if(t[A]>0)throw new RangeError("overflow");t=t.subarray(e)}let e=0;for(let A of t)e=e*256+A;if(!Number.isSafeInteger(e))throw new RangeError("overflow");return e}function T(e,t){if(!Number.isSafeInteger(t))throw new RangeError("overflow");if(t<0)throw new RangeError("underflow");for(let A=e.length-1;A>=0;A--){e[A]=t;t=Math.floor(t/256)}}function d(A,e){let{length:t}=A;if(t==e)return A.slice();if(t>e)return A.slice(e-t);let r=new Uint8Array(e);r.set(A,e-t);return r}function Q(e,t){try{let A=I(e);if(A.length>t)return null;return d(A,t)}catch(A){return null}}function D(A){let{length:e}=A;let t=0;while(t<e&&A[t]==0)t++;return A.subarray(t)}function I(t){t=t.trim();if(t.startsWith("0x"))return D(o(t));let{length:e}=t;if(e==0)throw new Error("expected digits");let r=e+1>>1;let n=new Uint8Array(r);let i=r;for(let A=0;A<e;A++){let e=t.charCodeAt(A)-48;if(e<0||e>9)throw new Error("expected decimal digits");for(let A=r-1;A>=i;A--){e+=n[A]*10;n[A]=e;e>>=8}while(e>0){n[--i]=e;e>>=8}}return n.subarray(i)}async function N(A,e,t=null,r="latest"){if(typeof A!=="object")throw new TypeError("expected provider");if(typeof e==="string")e={to:e};if(t instanceof y)e.data=t.build_hex();try{return S.from_hex(await A.request({method:"eth_call",params:[e,r]}))}catch(A){if(A.code==-32e3&&A.message==="execution reverted"){A.reverted=true}throw A}}class S{static from_hex(A){return new this(o(A))}constructor(A){this.buf=A;this.pos=0}get remaining(){return this.buf.length-this.pos}read(A){let{pos:e,buf:t}=this;let r=e+A;if(r>t.length)throw new RangeError("buffer overflow");let n=t.subarray(e,r);this.pos=r;return n}byte(){let{pos:A,buf:e}=this;if(A>=e.length)throw new RangeError("buffer overflow");this.pos=A+1;return e[A]}boolean(){return this.number()>0}number(A=32){return u(this.read(A))}uint256(){return new w(this.read(32))}string(){return t(this.memory())}memory(){let A=this.number();let e=A+32;let{buf:t}=this;if(e>t.length)throw new RangeError("buffer overflow");let r=u(t.subarray(A,e));A=e;e+=r;if(e>t.length)throw new RangeError("buffer overflow");return t.subarray(A,e)}addr(A=true){if(this.number(12)!=0)throw new TypeError("expected zero");let e=this.read(20);let t=f(e);return A?c(t):`0x${t}`}uvarint(){let e=0;let t=1;const r=127;while(true){let A=this.byte();e+=(A&127)*t;if(A<=r)break;if(t>70368744177664)throw new RangeException("overflow");t*=128}return e}}class y{static method(A){if(typeof A!=="string")throw new TypeError("expected string");let e=4;let t=new y(e);if(A.includes("(")){t.add_bytes(r().update(A).bytes.subarray(0,e))}else{t.add_hex(A);if(t.pos!=e)throw new Error("method should be a signature or 8-char hex")}return t}constructor(A=0,e=256,t=false){if(!Number.isSafeInteger(e)||e<1)throw new TypeError("expected positive initial capacity");this.buf=new Uint8Array(e);this.pos=0;this.offset=A;this.tails=[]}reset(){this.buf.fill(0);this.tails.length=0;this.pos=0;return this}build_hex(){return"0x"+f(this.build())}build(){let{pos:r,tails:n,offset:i}=this;let A=n.reduce((A,[e,t])=>t.length,0);if(A>0){this.alloc(A);let{buf:t}=this;for(let[A,e]of n){T(t.subarray(A,A+32),r-i);t.set(e,r);r+=e.length}}return this.buf.subarray(0,r)}alloc(e){if(typeof e!=="number"||e<1)throw new TypeError("expected positive size");let{buf:t,pos:A}=this;let r=A+e;if(r>t.length){let A=new Uint8Array(Math.max(t.length+e,t.length<<1));A.set(t);this.buf=t=A}this.pos=r;return t.subarray(A,r)}bytes_hex(A){return this.bytes(o(A))}bytes(A){this.alloc(A.length+31&~31).set(A);return this}number(e,t=32){if(e instanceof w){let A=this.alloc(t);if(t<32){A.set(e.bytes.subarray(32-t))}else{A.set(e.bytes,t-32)}}else{T(this.alloc(t),e)}return this}string(A){return this.memory(s(A))}memory(A){let{pos:e}=this;this.alloc(32);let t=new Uint8Array(A.length+63&~31);T(t.subarray(0,32),A.length);t.set(A,32);this.tails.push([e,t]);return this}addr(A){let e=o(A);if(e.length!=20)throw new TypeError("expected address");this.alloc(32).set(e,12);return this}add_hex(A){return this.add_bytes(o(A))}add_bytes(A){if(!(A instanceof Uint8Array)){if(A instanceof ArrayBuffer){A=new Uint8Array(A)}else if(Array.isArray(A)){A=Uint8Array.from(A)}else{throw new TypeError("expected bytes")}}this.alloc(A.length).set(A);return this}}const M="123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz";function O(A){let r=[];let e=0;for(let t of A){if(r.length==0&&t==0){e++;continue}for(let e=0;e<r.length;++e){let A=r[e]<<8|t;r[e]=A%58;t=A/58|0}while(t>0){r.push(t%58);t=t/58|0}}for(;e>0;e--)r.push(0);return String.fromCharCode(...r.reverse().map(A=>M.charCodeAt(A)))}function R(e){if(typeof e!=="string")throw new TypeError("expected string");let r=new Uint8Array(e.length);let t=0;let n=0;for(let A of e){let e=M.indexOf(A);if(e<0)throw new TypeError("expected base58 string");if(n==0){if(e==0){t++;continue}else{n=1}}for(let A=0;A<n;A++){e+=r[A]*58;r[A]=e;e>>=8}while(e>0){r[n++]=e;e>>=8}}n+=t;for(let e=0,t=n-1;e<t;e++,t--){let A=r[e];r[e]=r[t];r[t]=A}return r.subarray(0,n)}class L{constructor({url:A,chain_id:e=1,fetch:t}){if(typeof A!=="string")throw new TypeError("expected url");if(!t)t=globalThis.fetch.bind(globalThis);if(typeof t!=="function")throw new TypeError("fetch should be a function");this.url=A;this.fetch_api=t;this.chain_id=e;this.id=0}get chainId(){return this.chain_id}async request(A){if(typeof A!=="object")throw new TypeError("expected object");let e=await this.fetch_api(this.url,{method:"POST",body:JSON.stringify({...A,jsonrpc:"2.0",id:++this.id})});if(e.status!==200)throw new Error(`provider fetch error: ${e.status}`);let t;try{t=await e.json()}catch(A){throw new Error("expected json",{cause:A})}let{error:r}=t;if(r){console.log(t);let A=new Error(r.message??"unknown error");A.code=r.code;throw A}return t.result}}class p{constructor({url:A,chain_id:e,WebSocket:t,request_timeout:r=1e4,idle_timeout:n=500}){if(typeof A!=="string")throw new TypeError("expected url");if(!t)t=globalThis.WebSocket;if(!t)throw new Error("unknown WebSocket implementation");this.url=A;this.ws_api=t;this.chain_id=e;this.request_timeout=r;this.idle_timeout=n;this.idle_timer=undefined;this.ws=undefined;this.reqs=undefined;this.id=0}get chainId(){return this.chain_id}restart_idle(){if(this.idle_timeout>0){if(Object.keys(this.reqs).length==0){let{ws:A}=this;this.idle_timer=setTimeout(()=>{A.close()},this.idle_timeout)}else{clearTimeout(this.idle_timer)}}}async request(r){if(typeof r!=="object")throw new TypeError("expected object");await this.connect();const n=++this.id;const{reqs:i,ws:o}=this;this.restart_idle();return new Promise((A,e)=>{let t=setTimeout(()=>{delete i[n];e(new Error("Timeout"))},this.request_timeout);i[n]={timer:t,ful:A,rej:e};o.send(JSON.stringify({jsonrpc:"2.0",id:n,...r}))})}async connect(){let{ws:t}=this;if(t===undefined){let t=this.ws=[];let r=new this.ws_api(this.url);let n,i;try{await new Promise((A,e)=>{i=()=>{r.removeEventListener("error",e);r.removeEventListener("close",e);A()};n=setTimeout(()=>e(new Error("Timeout")),this.request_timeout);r.addEventListener("close",e);r.addEventListener("error",e);r.addEventListener("open",i,{once:true})})}catch(e){this.ws=undefined;r.removeEventListener("open",i);for(let{rej:A}of t)A(e);r.close();throw e}finally{clearTimeout(n)}this.ws=r;this.id=0;this.reqs={};let A=e=>{if(r!==this.ws)return;this.ws=undefined;for(let{rej:A}of Object.values(this.reqs))A(e);this.reqs=undefined;clearTimeout(this.idle_timer)};r.addEventListener("close",()=>A(new Error("Unexpected close")));r.addEventListener("error",A);for(let{ful:A}of t)A();let{reqs:o}=this;r.addEventListener("message",({data:A})=>{let e=JSON.parse(A);let t=o[e.id];if(!t)return;this.restart_idle();delete o[e.id];clearTimeout(t.timer);let{result:r,error:n}=e;if(r)return t.ful(r);let i=new Error(n?.message??"Unknown Error");if("code"in n)i.code=n.code;t.rej(i)});this.restart_idle()}else if(Array.isArray(t)){await new Promise((A,e)=>{t.push({ful:A,rej:e})})}}}function P(t,r=2,n=1e3){if(typeof r!=="number"||r<1)throw new TypeError("expected retry > 0");if(typeof n!=="number"||n<0)throw new TypeError("expected delay >= 0");async function i(A){let e=0;while(true){try{return await t.request(A)}catch(A){if(A.code===-32e3&&A.message==="header not found"&&e++<r){await new Promise(A=>setTimeout(A,n));continue}throw A}}}return new Proxy(t,{get:function(A,e){return e==="request"?i:A[e]}})}function m(e){let A=0;function t(){return e[A++]<<8|e[A++]}let i=t();let o=1;let s=[0,1];for(let A=1;A<i;A++){s.push(o+=t())}let r=t();let n=A;A+=r;let l=0;let B=0;function C(){if(l==0){B=B<<8|e[A++];l=8}return B>>--l&1}const c=31;const f=2**c;const g=f>>>1;const a=g>>1;const E=f-1;let h=0;for(let A=0;A<c;A++)h=h<<1|C();let w=[];let u=0;let T=f;while(true){let e=Math.floor(((h-u+1)*o-1)/T);let t=0;let r=i;while(r-t>1){let A=t+r>>>1;if(e<s[A]){r=A}else{t=A}}if(t==0)break;w.push(t);let A=u+Math.floor(T*s[t]/o);let n=u+Math.floor(T*s[t+1]/o)-1;while(((A^n)&g)==0){h=h<<1&E|C();A=A<<1&E;n=n<<1&E|1}while(A&~n&a){h=h&g|h<<1&E>>>1|C();A=A<<1^g;n=(n^g)<<1|g|1}u=A;T=1+n-A}let d=i-4;return w.map(A=>{switch(A-d){case 3:return d+65792+(e[n++]<<16|e[n++]<<8|e[n++]);case 2:return d+256+(e[n++]<<8|e[n++]);case 1:return d+e[n++];default:return A-1}})}function U(A){let e=m(Uint8Array.from(atob(A),A=>A.charCodeAt(0)));let t=0;return()=>e[t++]}function F(A){return A&1?~A>>1:A>>1}function G(e,t){let r=Array(e);for(let A=0;A<e;A++)r[A]=1+t();return r}function b(t,r){let n=Array(t);for(let A=0,e=-1;A<t;A++)n[A]=e+=1+r();return n}function Y(t,r){let n=Array(t);for(let A=0,e=0;A<t;A++)n[A]=e+=F(r());return n}function K(A){let e=b(A(),A);let t=A();let r=b(t,A);let n=G(t,A);return[...e.map(A=>[A,1]),...r.map((A,e)=>[A,n[e]])].sort((A,e)=>A[0]-e[0])}function H(e){let t=[];while(true){let A=e();if(A==0)break;t.push(X(A,e))}while(true){let A=e()-1;if(A<0)break;t.push(k(A,e))}return t.flat().sort((A,e)=>A[0]-e[0])}function x(r,e,n){if(e==0)return[];let i=[Y(r,n)];for(let A=1;A<e;A++){let e=Array(r);let t=i[A-1];for(let A=0;A<r;A++){e[A]=t[A]+F(n())}i.push(e)}return i}function k(A,e){let t=1+e();let r=b(t,e);let n=x(t,A,e);return r.map((A,e)=>[A,n.map(A=>A[e])])}function X(A,e){let t=1+e();let r=e();let n=1+e();let i=b(n,e);let o=G(n,e);let s=x(n,A,e);return i.map((A,e)=>[A,s.map(A=>A[e]),o[e],t,r])}function V(A){let e=K(A);return A=>Z(e,A)}function Z(A,r){for(let[e,t]of A){let A=r-e;if(A<0)break;if(A<t)return true}return false}function z(A,o){for(let[e,t,r,n,i]of A){let A=o-e;if(A<0)break;if(r>0){if(A<n*r&&A%n==0){let e=A/n;return t.map(A=>A+e*i)}}else if(A==0){return t}}}function J(A){return`{${A.toString(16).padStart(2,"0").toUpperCase()}}`}function v(A){return A.replace(/[^\x20-\x21\x23-\x7E]/gu,A=>J(A.codePointAt(0)))}function j(A){if(typeof A!="string")throw new TypeError(`expected string`);return[...A].map(A=>A.codePointAt(0))}function W(n){let i=[];let o=n.lastIndexOf(45);for(let e=0;e<o;e++){let A=n[e];if(A>=128)throw new Error("expected ASCII");i.push(A)}o++;const s=36;const l=1;const B=26;const C=38;const c=700;const f=(s-l)*B>>1;let g=0,a=128,E=72;while(o<n.length){let A=g;for(let e=1,t=s;;t+=s){if(o>=n.length)throw new Error(`invalid encoding`);let A=n[o++];if(A>=48&&A<=57){A-=22}else if(A>=97&&A<=122){A-=97}else{throw new Error(`invalid character ${A}`)}g+=A*e;const h=t<=E?l:t>=E+B?B:t-E;if(A<h)break;e*=s-h}let e=i.length+1;let t=A==0?g/c|0:g-A>>1;t+=t/e|0;let r=0;for(;t>f;r+=s){t=t/(s-l)|0}E=r+(s-l+1)*t/(t+C)|0;a+=g/e|0;g%=e;i.splice(g++,0,a)}return i}function q(r,n,i){let o=[];let s=[];let l=[s];function B(){if(o.length>0){s.push({v:o});o=[]}}for(let t=0;t<r.length;t++){if(n){let[A,e]=n(r,t);if(A>0){B();s.push({e:e,u:r.slice(t,t+A)});t+=A-1;continue}}let A=r[t];let e=i(A);if(Array.isArray(e)){o.push(...e)}else{B();if(e){s.push(e)}else{s=[];l.push(s)}}}B();return l}function _(A){const B=V(A);const C=V(A);const c=V(A);const o=V(A);const s=V(A);const l=V(A);const f=V(A);const g=V(A);const a=65039;const E=8205;const h=8419;const w=917631;function u(A,e){let t=A[e];let r=A[e+1];let n=f(t);if(n&&r&&l(r)){return[2,[t,r]]}let i=n||o(t);if(r==a){if(i)return[2,[t]];if(s(t))return[2,[t,a]]}if(n||i||B(t)||l(t)){return[1,[t]]}}return function(e,t){let r=e[t];let n=e.length;if(t+1<n&&B(r)){let A=e[t+1];if(B(A)){return[2,[r,A]]}}let A=C(r);if(t+1<n&&A&&e[t+1]==h){return[2,[r,h]]}else if(t+2<n&&(A||c(r))&&e[t+1]==a&&e[t+2]==h){return[3,A?[r,h]:[r,a,h]]}let i=u(e,t);if(!i)return[0];let[o,s]=i;o+=t;let l=false;while(o+1<n&&e[o]===E){let A=u(e,o+1);if(!A)break;l=true;o+=1+A[0];s.push(E,...A[1])}if(!l){if(o+2<n&&g(e[o])){let A=o+1;while(A+1<n&&g(e[A]))A++;if(e[A++]==w){return[A-t,s]}}}return[o-t,s]}}var $="ABIAAQB6AEAAOAAoACYAHwAiABgAFgAOAAsACwAMAY8AfgADApQhCD9xcXFxcXFxcW5hcbsGoY8Bf9URLHl4F4mAXgAn6F1DBPgbACv4ZqZU5nHucWhm/wCYRQRDAJcASQwtAe8FzAOHOfQyBvsC+GifBANGRZDdAC4CJSwCIi8GFTgCJSwmLyQpNix4JTpMcXV+rQEGGggji3raLA6mlfECCAxleXQSxKUjTyElAibgTiIC0gHv1AZQBLNgQ6JNVpJS9wlNAHRfAXiOWADp7D9QqYZpggAHGwscRNcB8gB0/yE9LHw3ZzYcITAjCk8BAlASEDEWAjEMCTgFzVsHDywSYVMEXgVBSgCFDAQFAckCphERETMDM2uMA88yLkEnJgYTLi6LB7kBPw0nVwsQ4gE7YHTHG0MAJpANNxIqJ15uH1IFEQDKAm4FfB2eATAAeIwtpywlOBhEJwRXng4sHLli4Q5IYl7584oYIwciAIlLCW1CAFQULjWxMQNQS/8RUSEBKAMWiQavLFEEUAT7AK0E1WULFc3RYR4GDAkRFRAxEhEDAQEABx8IASgjAAJR4QwFEpUiGzjHDw5ylPEUpACEAX4jBRwWExgAGwkSAkFoCRgIAA5XWI6qYXEEjBQARAEhDhAt2CcBFwASAEoTJBMCNQUSphsCAEEXDnKU8Q4OA70WBRQQHmoJLG5nEwoIDmNYjqphcQSGGgBJASASEDPYKA9QDyQSCgQMShMjAxQGAzUCcRkkAIsAuokwVSwLAmIGPhgnKACLCRkAEicBAQbgO8+xBTABBxcQJgAEQDf6MASDMBD0HwwoDAsu9wDA6hMtcgxWABIITU3k0SHxGPGp8QBhA+dvYj7xAEEFTY2l8Q8x0RWBKEEG8QtKx0dLASBJGLFQ8QBfWx4AFKXRDyrPFXMcIgEPEjzcS9Wn/KALJxnXU2YJOBWKOmP82gdIgmNcRsDi+p7FBLYbwm9Uzs1RfCbNpY30PNDOtZBhbqPBybOPeWa7oi+ySNuja7E79Fz+oJqkWRGdXLqRl46pfoUDu0uKXTiGuFf3GtJzAXtJmxI3V8am/mpQnjfi99U7ZkojTh6fKYexodlCUm8Nn5tkJXqdPwxaQiU29Pa8nQxhFccS0ZzA2p+XNo3r68FBGjQNasxwtQH/0ELiOQLNuyc0YqOxCPnfFsvASXVP7enrn5p48UHDGS6NU/kYR37WSJ7+CN+nV4NqWlRTc/nQOuWoDD2Cnkn26E21fE+79xMXG2voqdtyef5eUY6MOoAAPIvdUDW+i16JSxe2+srXAYVvzbE8SKhyxzjFf2rMlgMycfXR8nl6/xF97xDwBSNLExVnK4YUGbAMpgGeHD0vHVXsIK20HyDdJQ9a5Uhwta5o+Tw/HpthmalqVX7v90SgUzjZaEahH3JPOhT8k+LFPClF+c5gMeKg";let AA=U($);const eA=V(AA);const tA=V(AA);const rA=V(AA);const nA=V(AA);const iA=V(AA);const oA=V(AA);const sA=V(AA);function lA(r){for(let e=0,t=r.length-1;e<=t;e++){switch(r[e]){case 8204:{if(e>0&&eA(r[e-1]))continue;if(e>0&&e<t){let A=e-1;while(A>0&&tA(r[A]))A--;if(rA(r[A])){let A=e+1;while(A<t&&tA(r[A]))A++;if(nA(r[A])){continue}}}break}case 8205:{if(e>0&&eA(r[e-1]))continue;break}case 183:{if(e>0&&e<t&&r[e-1]==108&&r[e+1]==108)continue;break}case 885:{if(e<t&&iA(r[e+1]))continue;break}case 1523:case 1524:{if(e>0&&oA(r[e-1]))continue;break}default:continue}throw new Error(`No context for "${v(String.fromCodePoint(r[e]))}"`)}if(r.some(A=>A>=1632&&A<=1641)&&r.some(A=>A>=1776&&A<=1785)){throw new Error(`Disallowed arabic-indic digit mixture`)}if(r.includes(12539)&&!r.some(A=>sA(A))){throw new Error(`Disallowed katakana`)}}var BA="";let cA=U(BA);const fA=Array(1+cA()).fill().map(()=>K(cA));const gA=H(cA);const aA=K(cA);const EA=44032;const hA=4352;const wA=4449;const uA=4519;const TA=19;const dA=21;const QA=28;const DA=dA*QA;const IA=TA*DA;const NA=EA+IA;const SA=hA+TA;const yA=wA+dA;const MA=uA+QA;function OA(A){return A>=EA&&A<NA}function RA(n,i){if(n<128){i(n)}else if(OA(n)){let A=n-EA;let e=A/DA|0;let t=A%DA/QA|0;let r=A%QA;i(hA+e);i(wA+t);if(r>0)i(uA+r)}else{let e=z(gA,n);if(e){for(let A of e){RA(A,i)}}else{i(n)}}}function LA(r,n){if(r>=hA&&r<SA&&n>=wA&&n<yA){let A=r-hA;let e=n-wA;let t=A*DA+e*QA;return EA+t}else if(OA(r)&&n>uA&&n<MA&&(r-EA)%QA==0){return r+(n-uA)}else{for(let[A,e]of gA){if(e.length==2&&e[0]==r&&e[1]==n){if(Z(aA,A))break;return A}}}return-1}function pA(A,t){let r=[];A.forEach(A=>RA(A,e));n();function n(){r.sort((A,e)=>A[0]-e[0]).forEach(([A,e])=>t(A,e));r.length=0}function e(e){let A=1+fA.findIndex(A=>Z(A,e));if(A==0){n();t(A,e)}else{r.push([A,e])}}}function PA(A){let r=[];let n=[];let i=-1;let o=0;pA(A,e);if(i>=0)r.push(i);r.push(...n);return r;function e(e,t){if(i===-1){if(e==0){i=t}else{r.push(t)}}else if(o>0&&o>=e){if(e==0){r.push(i,...n);n.length=0;i=t}else{n.push(t)}o=e}else{let A=LA(i,t);if(A>=0){i=A}else if(o==0&&e==0){r.push(i);i=t}else{n.push(t);o=e}}}}var mA="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";let UA=U(mA);const FA=K(UA);const GA=K(UA);const bA=K(UA);const YA=K(UA);const KA=K(UA);const HA=K(UA);function xA(A){return A.some(A=>Z(FA,A)||Z(bA,A))}function kA(t){if(t.length==0)return;let r=t.length-1;if(Z(FA,t[0])){if(!t.every(A=>Z(FA,A)||Z(bA,A)||Z(YA,A)||Z(KA,A)||Z(HA,A)))throw new Error(`RTL: disallowed properties`);while(Z(HA,t[r]))r--;r=t[r];if(!(Z(FA,r)||Z(YA,r)||Z(bA,r)))throw new Error(`RTL: disallowed ending`);let A=t.some(A=>Z(YA,A));let e=t.some(A=>Z(bA,A));if(A&&e)throw new Error(`RTL: AN+EN`)}else if(Z(GA,t[0])){if(!t.every(A=>Z(GA,A)||Z(YA,A)||Z(KA,A)||Z(HA,A)))throw new Error(`LTR: disallowed properties`);while(Z(HA,t[r]))r--;r=t[r];if(!Z(GA,r)&&!Z(YA,r))throw new Error(`LTR: disallowed ending`)}else{throw new Error(`unknown direction`)}}var XA="";let VA=U(XA);const ZA=V(VA);const zA=V(VA);const JA=V(VA);const vA=H(VA);const jA=V(VA);const WA=VA()&&_(VA);function qA(A){return A.flatMap(A=>A.e??PA(A.v))}function _A(A,e){return new Error(`Disallowed label "${v(String.fromCodePoint(...A))}": ${e}`)}function $A(A){const t=45;let r=q(j(A),WA,A=>{if(ZA(A))return;if(JA(A))return[];if(zA(A))return[A];let e=z(vA,A);if(e)return e;throw new Error(`Disallowed character "${v(String.fromCodePoint(A))}"`)}).map(e=>{let r=qA(e);if(r.length>=4&&r[2]==t&&r[3]==t){if(r[0]==120&&r[1]==110){let A;try{A=W(r.slice(4));[e]=q(A,WA,A=>zA(A)?[A]:[]);let t=qA(e);if(A.length!=t.length||!A.every((A,e)=>A==t[e]))throw new Error("not normalized")}catch(A){throw _A(r,`punycode: ${A.message}`)}r=A}}if(r.length>0){if(r.length>=4&&r[2]==t&&r[3]==t)throw _A(r,`invalid label extension`);if(r[0]==t)throw _A(r,`leading hyphen`);if(r[r.length-1]==t)throw _A(r,`trailing hyphen`);if(jA(r[0]))throw _A(r,`leading combining mark`);try{lA(e.flatMap(({v:A})=>A??[]))}catch(A){throw _A(r,A.message)}}return e});let n=r.map(A=>A.flatMap(({v:A})=>A??[]));if(n.some(xA)){for(let e=0;e<r.length;e++){try{kA(n[e])}catch(A){throw _A(qA(r[e]),`bidi: ${A.message}`)}}}return r.map(A=>String.fromCodePoint(...qA(A))).join(".")}function Ae(A){return q(j(A),WA,A=>{if(ZA(A))return{};if(zA(A))return[A];if(JA(A))return{i:A};let e=z(vA,A);if(e)return{m:A,u:e};return{d:A}})[0]}var ee={777:833,3333:333333,BTC:0,LTC:2,DOGE:3,RDD:4,DASH:5,PPC:6,NMC:7,FTC:8,XCP:9,BLK:10,NSR:11,NBT:12,MZC:13,VIA:14,XCH:8444,RBY:16,GRS:17,DGC:18,CCN:828,DGB:20,MONA:22,CLAM:23,XPM:24,NEOS:25,JBS:26,ZRC:27,VTC:28,NXT:29,BURST:30,MUE:31,ZOOM:32,VASH:33,CDN:34,SDC:35,PKB:36,PND:37,START:38,MOIN:39,EXP:40,EMC2:41,DCR:42,XEM:43,PART:44,ARG:45,SHR:48,GCR:49,NVC:50,AC:51,BTCD:52,DOPE:53,TPC:54,AIB:55,EDRC:56,SYS:57,SLR:58,SMLY:59,ETH:60,ETC:61,PSB:62,LDCN:63,XBC:65,IOP:66,NXS:67,INSN:68,OK:69,BRIT:70,CMP:71,CRW:72,BELA:73,ICX:74,FJC:75,MIX:76,XVG:77,EFL:78,CLUB:79,RICHX:80,POT:81,QRK:82,TRC:83,GRC:84,AUR:85,IXC:86,NLG:87,BITB:88,BTA:1657,XMY:90,BSD:91,UNO:92,MTR:18e3,GB:94,SHM:95,CRX:96,BIQ:97,EVO:98,STO:99,BIGUP:100,GAME:101,DLC:102,ZYD:103,DBIC:104,STRAT:105,SH:106,MARS:107,UBQ:108,PTC:109,NRO:110,ARK:111,USC:112,THC:113,LINX:114,ECN:115,DNR:116,PINK:117,ATOM:118,PIVX:119,FLASH:120,ZEN:121,PUT:122,ZNY:123,UNIFY:124,XST:125,BRK:126,VC:127,XMR:128,VOX:129,NAV:130,FCT:7777777,EC:132,ZEC:133,LSK:134,STEEM:135,XZC:136,RBTC:137,RPT:139,LBC:140,KMD:141,BSQ:142,RIC:143,XRP:144,BCH:145,NEBL:146,ZCL:147,XLM:148,NLC2:149,WHL:150,ERC:151,DMD:152,BTM:153,BIO:154,XWCC:155,BTG:156,BTC2X:157,SSN:158,TOA:159,BTX:160,ACC:161,BCO:5249353,ELLA:163,PIRL:164,NANO:256,VIVO:166,FRST:167,HNC:168,BUZZ:169,MBRS:170,HC:171,HTML:172,ODN:173,ONX:174,RVN:175,GBX:176,BTCZ:177,POA:178,NYC:179,MXT:180,WC:181,MNX:182,BTCP:183,MUSIC:184,BCA:185,CRAVE:186,STAK:187,WBTC:188,LCH:189,EXCL:190,LCC:192,XFE:193,EOS:194,TRX:195,KOBO:196,HUSH:197,BANANO:198,ETF:199,OMNI:200,BIFI:201,UFO:202,CNMC:203,BCN:204,RIN:205,ATP:206,EVT:207,ATN:208,BIS:209,NEET:210,BOPO:211,OOT:212,ALIAS:213,MONK:842,BOXY:215,FLO:216,MEC:217,BTDX:218,XAX:219,ANON:220,LTZ:221,BITG:222,ICP:223,SMART:224,XUEZ:225,HLM:226,WEB:227,ACM:228,NOS:229,BITC:230,HTH:231,TZC:232,VAR:233,IOV:234,FIO:235,BSV:236,DXN:237,QRL:238,PCX:239,LOKI:240,NIM:242,SOV:243,JCT:244,SLP:245,EWT:246,UC:401,EXOS:248,ECA:249,SOOM:250,XRD:1022,FREE:252,NPW:253,BST:254,BTCC:257,ZEST:259,ABT:260,PION:261,DT3:262,ZBUX:263,KPL:264,TPAY:265,ZILLA:266,ANK:267,BCC:268,HPB:269,ONE:1023,SBC:271,IPC:272,DMTC:273,OGC:274,SHIT:275,ANDES:276,AREPA:277,BOLI:278,RIL:279,HTR:280,FCTID:281,BRAVO:282,ALGO:283,BZX:284,GXX:285,HEAT:286,XDN:287,FSN:288,CPC:337,BOLD:290,IOST:291,TKEY:292,USE:293,BCZ:294,IOC:295,ASF:296,MASS:297,FAIR:298,NUKO:299,GNX:300,DIVI:301,CMT:1122,EUNO:303,IOTX:304,ONION:305,"8BIT":306,ATC:307,BTS:308,CKB:309,UGAS:310,ADS:311,ARA:312,ZIL:313,MOAC:314,SWTC:315,VNSC:316,PLUG:317,MAN:318,ECC:319,RPD:320,RAP:321,GARD:322,ZER:323,EBST:324,SHARD:325,LINDA:326,CMM:327,BLOCK:328,AUDAX:329,LUNA:330,ZPM:331,KUVA:332,MEM:333,CS:498,SWIFT:335,FIX:336,VGO:338,DVT:339,N8V:340,MTNS:341,BLAST:342,DCT:343,AUX:344,USDP:345,HTDF:346,YEC:347,QLC:348,TEA:349,ARW:350,MDM:351,CYB:352,LTO:353,DOT:354,AEON:355,RES:356,AYA:357,DAPS:358,CSC:359,VSYS:360,NOLLAR:361,XNOS:362,CPU:363,LAMB:364,VCT:365,CZR:366,ABBC:367,HET:368,XAS:369,VDL:370,MED:371,ZVC:372,VESTX:373,DBT:374,SEOS:375,MXW:376,ZNZ:377,XCX:378,SOX:379,NYZO:380,ULC:381,RYO:88888,KAL:383,XSN:384,DOGEC:385,BMV:386,QBC:387,IMG:388,QOS:389,PKT:390,LHD:391,CENNZ:392,HSN:393,CRO:394,UMBRU:395,TON:607,NEAR:397,XPC:398,ZOC:399,NIX:400,GALI:402,OLT:403,XBI:404,DONU:405,EARTHS:406,HDD:407,SUGAR:408,AILE:409,TENT:410,TAN:411,AIN:412,MSR:413,SUMO:414,ETN:415,BYTZ:416,WOW:417,XTNC:418,LTHN:419,NODE:420,AGM:421,CCX:422,TNET:423,TELOS:424,AION:425,BC:426,KTV:427,ZCR:428,ERG:429,PESO:430,BTC2:431,XRPHD:432,WE:433,KSM:434,PCN:435,NCH:436,ICU:437,LN:438,DTP:439,BTCR:1032,AERGO:441,XTH:442,LV:443,PHR:444,VITAE:445,COCOS:446,DIN:447,SPL:448,YCE:449,XLR:450,KTS:556,DGLD:452,XNS:453,EM:454,SHN:455,SEELE:456,AE:457,ODX:458,KAVA:459,GLEEC:476,FIL:461,RUTA:462,CSDT:463,ETI:464,ZSLP:465,ERE:466,DX:467,CPS:468,BTH:469,MESG:470,FIMK:471,AR:472,OGO:473,ROSE:474,BARE:475,CLR:477,RNG:478,OLO:479,PEXA:480,MOON:481,OCEAN:482,BNT:483,AMO:484,FCH:485,LAT:486,COIN:487,VEO:488,CCA:489,GFN:490,BIP:491,KPG:492,FIN:493,BAND:494,DROP:495,BHT:496,LYRA:497,RUPX:499,THETA:500,SOL:501,THT:502,CFX:503,KUMA:504,HASH:505,CSPR:506,EARTH:507,ERD:508,CHI:509,KOTO:510,OTC:511,SEELEN:513,AETH:514,DNA:515,VEE:516,SIERRA:517,LET:518,BSC:9006,BTCV:520,ABA:521,SCC:522,EDG:523,AMS:524,GOSS:525,BU:526,GRAM:527,YAP:528,SCRT:529,NOVO:530,GHOST:531,HST:532,PRJ:533,YOU:534,XHV:535,BYND:536,JOYS:537,VAL:616,FLOW:539,SMESH:540,SCDO:541,IQS:542,BIND:543,COINEVO:544,SCRIBE:545,HYN:546,BHP:547,BBC:1111,MKF:549,XDC:550,STR:551,SUM:997,HBC:553,BCS:555,LKR:557,TAO:558,XWC:559,DEAL:560,NTY:561,TOP:562,STARS:563,AG:564,CICO:565,IRIS:566,NCG:567,LRG:568,SERO:569,BDX:570,CCXX:571,SLS:572,SRM:573,VLX:574,VIVT:575,BPS:576,NKN:577,ICL:578,BONO:579,PLC:580,DUN:581,DMCH:582,CTC:583,KELP:584,GBCR:585,XDAG:586,PRV:587,SCAP:588,TFUEL:589,GTM:590,RNL:591,GRIN:592,MWC:593,DOCK:594,POLYX:595,DIVER:596,XEP:597,APN:598,TFC:599,UTE:600,MTC:601,NC:602,XINY:603,DYN:3381,BUFS:605,STOS:606,TAFT:608,HYDRA:609,NOR:610,WCN:613,OPT:614,PSWAP:615,XOR:617,SSP:618,DEI:619,AXL:620,ZERO:621,NOBL:624,EAST:625,LORE:628,BTSG:639,LFC:640,AZERO:643,XLN:646,ZRB:648,UCO:650,PIRATE:660,SFRX:663,ACT:666,PRKL:667,SSC:668,GC:669,YUNGE:677,Voken:678,Evrynet:680,KAR:686,CET:688,VEIL:698,XDAI:700,MCOIN:707,CHC:711,XTL:713,BNB:714,SIN:715,DLN:716,MCX:725,BMK:731,ATOP:737,RAD:747,XPRT:750,BALLZ:768,COSA:770,BR:771,BTW:777,UIDD:786,ACA:787,BNC:788,TAU:789,BEET:800,DST:3564,QVT:808,DVPN:811,VET:818,CLO:820,BDB:822,CRUZ:831,SAPP:832,KYAN:834,AZR:835,CFL:836,DASHD:837,TRTT:838,UCR:839,PNY:840,BECN:841,SAGA:843,SUV:844,ESK:845,OWO:846,PEPS:847,BIR:848,DSM:852,PRCY:853,MOB:866,IF:868,LUM:880,ZBC:883,ADF:886,NEO:888,TOMO:889,XSEL:890,LKSC:896,XEC:1899,LMO:900,HNT:904,FIS:907,SAAGE:909,META:916,FRA:917,DIP:925,RUNE:931,LTP:955,MATIC:966,TWINS:970,XAZAB:988,AIOZ:989,PEC:991,OKT:996,LBTC:1776,BCD:999,BTN:1e3,TT:1001,BKT:1002,NODL:1003,FTM:1007,HT:1010,ELV:1011,BIC:1013,EVC:1020,ONT:1024,KEX:1026,MCM:1027,RISE:1120,ETSC:1128,DFI:1129,CDY:1145,HOO:1170,ALPH:1234,MOVR:1285,DFC:1337,HYC:1397,TENTSLP:1410,BEAM:1533,ELF:1616,AUDL:1618,ATH:1620,NEW:1642,BCX:1688,XTZ:1729,BBP:1777,JPYS:1784,VEGA:1789,ADA:1815,TES:1856,CLC:1901,VIPS:1919,CITY:1926,XX:1955,XMX:1977,TRTL:1984,EGEM:1987,HODL:1989,PHL:1990,SC:1991,MYT:1996,POLIS:1997,XMCC:1998,COLX:1999,GIN:2e3,MNP:2001,KIN:2017,EOSC:2018,GBT:2019,PKC:2020,SKT:2021,XHT:2022,MCASH:2048,TRUE:2049,IoTE:2112,XRG:2137,ASK:2221,QTUM:2301,ETP:2302,GXC:2303,CRP:2304,ELA:2305,SNOW:2338,AOA:2570,REOSC:2894,LUX:3003,XHB:3030,COS:3077,SEQ:3383,DEO:3552,NAS:2718,BND:2941,CCC:3276,ROI:3377,FC8:4040,YEE:4096,IOTA:4218,AXE:4242,XYM:4343,FIC:5248,HNS:5353,FUND:5555,STX:5757,VOW:5895,SLU:5920,GO:6060,MOI:6174,BPA:6666,SAFE:19165,ROGER:6969,TOPL:7091,BTV:7777,SKY:8e3,PAC:8192,KLAY:8217,BTQ:8339,SBTC:8888,NULS:8964,BTP:8999,AVAX:9e3,ARB:9001,BOBA:9002,LOOP:9003,STARK:9004,AVAXC:9005,NRG:9797,BTF:9888,GOD:9999,FO:1e4,RTM:10226,XRC:10291,XPI:10605,ESS:11111,IPOS:12345,MINA:12586,BTY:13107,YCC:13108,SDGO:15845,XTX:16181,ARDR:16754,FLUX:19167,RITO:19169,XND:20036,PWR:22504,BELL:25252,CHX:25718,ESN:31102,TEO:33416,BTCS:33878,BTT:34952,FXTC:37992,AMA:39321,AXIV:43028,EVE:49262,STASH:49344,CELO:52752,KETH:65536,GRLC:69420,GWL:70007,ZYN:77777,WICC:99999,HOME:100500,STC:101010,STRAX:105105,AKA:200625,GENOM:200665,ATS:246529,PI:314159,VALUE:333332,X42:424242,VITE:666666,SEA:888888,ILT:1171337,ETHO:1313114,XERO:1313500,LAX:1712144,EPK:3924011,HYD:4741444,BHD:5249354,PTN:5264462,WAN:5718350,WAVES:5741564,SEM:7562605,ION:7567736,WGR:7825266,OBSR:7825267,AFS:8163271,XDS:15118976,AQUA:61717561,HATCH:88888888,kUSD:91927009,GENS:99999996,EQ:99999997,FLUID:99999998,QKC:99999999,FVDC:608589380};function te(A){return r().update(A).bytes}function re(A){return new w(te(A))}function ne(e){if(typeof e!=="string")throw new TypeError("expected string");let t=new Uint8Array(64);if(e.length>0){for(let A of e.split(".").reverse()){t.set(te(A),32);t.set(r().update(t).bytes,0)}}return new w(t.slice(0,32))}const ie="0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e";const oe=Symbol("ENSResolved");function se(){return new Date}async function le(n,i){if(i instanceof w){let A=await Te(n,i);return{node:i,resolver:A,[oe]:se()}}if(typeof i==="object"){if(oe in i)return i;i=i.node??i.name??i.address}if(typeof i==="string"){i=i.trim();if(i.length>0){let A=i;try{A=await Ce(n,i)}catch(A){}if(!A){throw new Error(`No primary for address`)}let e=$A(i);let t=ne(e);let r=await Te(n,t);return{name0:A,name:e,node:t,resolver:r,[oe]:se()}}}throw new TypeError("Expected name or address")}async function Be(A,e){let t=await le(A,e);let{resolver:r,node:n,address:i}=t;if(a(r))return;if(i)return i;t.address=i=await de(A,r,n);return i}async function Ce(A,e){if(typeof e==="object")({address:e}=e);e=c(e);let t=ne(`${e.slice(2).toLowerCase()}.addr.reverse`);let r=await Te(A,t);if(a(r))return;const n="691f3431";return(await N(A,r,y.method(n).number(t))).string()}async function ce(A,e){let t=await le(A,e);let{node:r,resolver:n,address:i}=t;if(a(n))return{type:"none",...t};if(!i)t.address=await de(A,n,r);t.avatar=await Qe(A,n,r,"avatar");return{...t,...await fe(t.avatar,A,t.address)}}async function fe(A,i=null,o=false){if(typeof A!=="string")throw new Error("Invalid avatar: expected string");if(A.length==0)return{type:"null"};if(A.includes("://")||A.startsWith("data:"))return{type:"url"};let s=A.split("/");let t=s[0];if(t.startsWith("eip155:")){if(s.length<2)return{type:"invalid",error:"expected contract"};if(s.length<3)return{type:"invalid",error:"expected token"};let A=parseInt(t.slice(t.indexOf(":")+1));if(!(A>0))return{type:"invalid",error:"expected chain id"};let e=s[1];if(e.startsWith("erc721:")){let t=e.slice(e.indexOf(":")+1);if(!g(t))return{type:"invalid",error:"expected contract address"};let r;try{r=w.from_str(s[2])}catch(A){return{type:"invalid",error:"expected uint256 token"}}let n={type:"nft",interface:"erc721",contract:t,token:r,chain:A};if(i&&parseInt(i.chainId)===A){const l="c87b56dd";const B="6352211e";try{let[A,e]=await Promise.all([N(i,t,y.method(B).number(r)).then(A=>A.addr()),N(i,t,y.method(l).number(r)).then(A=>A.string())]);n.owner=A;n.meta_uri=e;if(o){n.owned=o===A?1:0}}catch(A){return{type:"invalid",error:`invalid response from contract`}}}return n}else if(e.startsWith("erc1155:")){let t=e.slice(e.indexOf(":")+1);if(!g(t))return{type:"invalid",error:"invalid contract address"};let r;try{r=w.from_str(s[2])}catch(A){return{type:"invalid",error:"expected uint256 token"}}let n={type:"nft",interface:"erc1155",contract:t,token:r,chain:A};if(i&&parseInt(i.chainId)===A){const C="0e89341c";const c="00fdd58e";try{let[A,e]=await Promise.all([!o?-1:N(i,t,y.method(c).addr(o).number(r)).then(A=>A.number()),N(i,t,y.method(C).number(r)).then(A=>A.string())]);n.meta_uri=e.replace("{id}",f(r.bytes));if(o){n.owned=A}}catch(A){return{type:"invalid",error:`invalid response from contract`}}}return n}else{return{type:"invalid",error:`unsupported contract interface: ${e}`}}}return{type:"unknown"}}async function ge(e,A,r){if(typeof r==="string")r=[r];if(!Array.isArray(r))throw new TypeError("Expected key or array of keys");let n=await le(e,A);let{node:i,resolver:o}=n;if(!a(o)){let t=await Promise.all(r.map(A=>Qe(e,o,i,A)));n.text=Object.fromEntries(r.map((A,e)=>[A,t[e]]))}return n}async function ae(t,A,e){if(!Array.isArray(e))e=[e];e=e.map(ue);let n=await le(t,A);let{node:i,resolver:o}=n;if(!a(o)){let r=await Promise.all(e.map(([A,e])=>De(t,o,i,e)));n.addr=Object.fromEntries(e.map(([A,e],t)=>[A,r[t]]))}return n}async function Ee(A,e){let t=await le(A,e);let{node:r,resolver:n}=t;if(!a(n)){const i="bc1c58d1";let e=(await N(A,n,y.method(i).number(r))).memory();if(e.length>0){t.contenthash=e;let A=new S(e);if(A.uvarint()==227){if(A.byte()==1&&A.byte()==112){t.contenthash_url=`ipfs://${O(A.read(A.remaining))}`}}}}return t}async function he(e,A){let t=await le(e,A);let{node:r,resolver:n}=t;if(!a(n)){const i="c8690233";let A=await N(e,n,y.method(i).number(r));t.pubkey={x:A.uint256(),y:A.uint256()}}return t}function we(A){return"0x"+A.toString(16).padStart(4,"0")}function ue(t){if(typeof t==="string"){let A=ee[t];if(typeof A!=="number")throw new Error(`Unknown address type for name: ${t}`);return[t,A]}else if(typeof t==="number"){let A=Object.values(ee).indexOf(t);let e;if(A>=0){e=Object.keys(ee)[A]}else{e=we(t)}return[e,t]}else{throw new TypeError("Expected address type or name")}}async function Te(A,e){const t="0178b8bf";try{return(await N(A,ie,y.method(t).number(e))).addr()}catch(A){throw new Error("Invalid response from registry",{cause:A})}}async function de(A,e,t){const r="3b3b57de";try{return(await N(A,e,y.method(r).number(t))).addr()}catch(A){throw new Error("Invalid response from resolver for addr",{cause:A})}}async function Qe(A,e,t,r){const n="59d1d43c";try{return(await N(A,e,y.method(n).number(t).string(r))).string()}catch(A){throw new Error(`Invalid response from resolver for text: ${r}`,{cause:A})}}async function De(A,e,t,r){const n="f1cb7e06";try{return(await N(A,e,y.method(n).number(t).number(r))).memory()}catch(A){throw new Error(`Invalid response from resolver for addr of type: ${we(r)}`,{cause:A})}}export{S as ABIDecoder,y as ABIEncoder,ee as ADDR_TYPES,L as FetchProvider,E as NULL_ADDRESS,w as Uint256,p as WebSocketProvider,O as base58_from_bytes,R as bytes_from_base58,Q as bytes_from_digits_or_null,o as bytes_from_hex,s as bytes_from_utf8,c as checksum_address,C as compare_arrays,ae as ens_addr_record,ce as ens_avatar,Ee as ens_contenthash_record,Ce as ens_name_for_address,$A as ens_normalize,he as ens_pubkey_record,le as ens_resolve,ge as ens_text_record,Ae as ens_tokenize,N as eth_call,re as hash_from_label,f as hex_from_bytes,h as is_multihash,a as is_null_hex,g as is_valid_address,r as keccak,d as left_truncate_bytes,Be as lookup_address,ne as node_from_ens_name,fe as parse_avatar,I as parse_bytes_from_digits,P as retry,T as set_bytes_to_unsigned,A as sha3,e as shake,u as unsigned_from_bytes,t as utf8_from_bytes};